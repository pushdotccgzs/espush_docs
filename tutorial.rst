=========
入门指引
=========

-------------
什么是ESP8266
-------------

ESP8266是一款由乐鑫公司开发的WIFI芯片，按其官网的描述
    ESP8266 是一款高度集成的芯片，该芯片专门针对无线连接的需求而开发，是一个完整且自成系统的 WiFi 网络解决方案。它能够搭载软件应用，也能通过另一个应用处理器卸载所有的 WiFi 网络功能。 ESP8266 具备强大的片上处理和存储功能，这使其可通过 GPIO 口集成传感器及其他应用的特定设备，既缩短前期开发时间，也最大限度减少运行中系统资源的占用。ESP8266 高度片内集成，仅需极少的外部电路，而其包括前端模块在内的整个解决方案，可将设计中 PCB 所占的空间降到最低。

ESP8266目前网络方面性能较弱，所以我们主要并不考察其性能，而关注其在极小的PCB板上、极精简的电路下，实现了稳定的WIFI通讯。

-------------
什么是ESPUSH
-------------

ES-PUSH是一个针对 乐鑫公司 http://espressif.com/ 的8266 WIFI物理网芯片开发的推送服务平台，具备实时远程数据推送，数据收集与整理归纳，云端自动推送升级等功能。

ESP8266内置低功耗32位芯片，可兼作应用处理器，同时自带众多GPIO引脚，设置引脚复用后大大方便控制外部设备电路。这使得我们的物联网设备或其他需要wifi网络功能的设备模块无需额外集成CPU即可实现大部分功能，无疑是开发者的福音。

但ESP8266使用的TCP/IP编程与通常的Socket方式不同，其网络控制结构`struct espconn`基于对lwip的浅层封装实现，使用异步回调机制，给开发带来了诸多不变，往常的大量的基于socket的网络编程库与经验得不到重复使用。故此开发了这样一个数据推送平台。以期能为开发者分忧。

ES-PUSH只希望解决一个问题，即能在任何有网络的地方随时控制处于内网中的WIFI设备，譬如在公司里控制家里的wifi机器人小车，回家的路上使用4G网络控制家里的热水器开关、空调器开关等。

大多数市售的8266芯片都自带了Flash存储空间，我们可以理解为是8266这块CPU的硬盘，ESP8266的固件指的是存放于Flash内的指令代码，你可以认为是芯片的操作系统，虽然远没有他复杂。而Flash是可以刷写改变的，所以通过刷入不同的“操作系统”便可以针对性实现不同的功能，现流行的固件有AT固件与NodeMCU固件。

ESPUSH开发了不同的固件以适宜现有的8266生态，如深受广大电子朋友喜欢的AT固件，在官网AT固件基础上定制了GPIO控制指令与云平台连接指令，并针对小容量Flash特别的进行了适配。针对使用Lua语言编程的NodeMCU芯片，ESPUSH也针对性推出了相应的固件，并开源在了github上。

--------------------------
不同固件间的区别
--------------------------

我们一般使用AT固件是因为其简单，系统外部MCU通过串口与8266通讯。

如果我们有更高的要求，可以使用NodeMCU，使用了Lua编程语言，以Node.js 类似的语法实现更多的自定义功能

如果C语言基础好，且有更多的自定义要求，更精细化的控制要求，则可以使用官方提供的SDK进行自定义固件开发。


--------------------------
如何为ESP8266刷写固件
--------------------------


--------------------------
ESPUSH能做什么不能做什么
--------------------------



